ifeq ($(shell xxd -l 2 -p $$(which make)),4d5a)
CXX = clang++
CXXFLAGS = -DSFML_STATIC -O3 -std=c++23 -Wall -Wextra -Wpedantic -Wreturn-type -Wconversion -fprebuilt-module-path=$(RELEASE_PATH) --precompile
CXXFLAGS_P = -O3 -std=c++23 -Wall -Wextra -Wpedantic -Wreturn-type -Wconversion -fprebuilt-module-path=$(RELEASE_PATH)
LDFLAGS = -static -Wl,-s,--no-insert-timestamp -mwindows
TARGET = release/hentai.exe
STDCPPM = /clang64/share/libc++/v1/std.cppm
#STDCPPM = $(shell llvm-config --prefix | awk "{print \$$1 \"/share/libc++/v1/std.cppm\"}")
LIBS = -lfreetype -lgdi32 -lopengl32 -lwinmm -lsfml-main -lsfml-graphics-s -lsfml-window-s -lsfml-audio-s -lsfml-network-s -lsfml-system-s
endif

ifeq ($(shell xxd -l 4 -p $$(which make)),7f454c46)
CXX = clang++
CXXFLAGS = -stdlib=libc++ -Wall -Wextra -Wpedantic -Wreturn-type -Wconversion -O3 -std=c++23 -fprebuilt-module-path=$(RELEASE_PATH) --precompile
CXXFLAGS_P = -O3 -std=c++23 -Wall -Wextra -Wpedantic -Wreturn-type -Wconversion -fprebuilt-module-path=$(RELEASE_PATH)
LDFLAGS = -Wl,-s -stdlib=libc++ -fuse-ld=lld 
TARGET = release/hentai
STDCPPM = /usr/share/libc++/v1/std.cppm
LIBS = -lsfml-graphics -lsfml-window -lsfml-audio -lsfml-network -lsfml-system
endif

ifeq ($(shell xxd -l 4 -p $$(which make)),cffaedfe)
CXX = /opt/homebrew/opt/llvm/bin/clang++
CXXFLAGS = -I/opt/homebrew/include -O3 -std=c++23 -Wall -Wextra -Wpedantic -Wreturn-type -Wconversion -fprebuilt-module-path=$(RELEASE_PATH) --precompile
CXXFLAGS_P = -O3 -std=c++23 -Wall -Wextra -Wpedantic -Wreturn-type -Wconversion -fprebuilt-module-path=$(RELEASE_PATH)
LDFLAGS = -Wl,-s -L/opt/homebrew/lib -fuse-ld=lld
TARGET = release/hentai
STDCPPM = /opt/homebrew/opt/llvm/share/libc++/v1/std.cppm
LIBS = -lsfml-graphics -lsfml-window -lsfml-audio -lsfml-network -lsfml-system
endif

PCM := release/std.pcm 				  \
	   release/sfml.pcm 			  \
	   release/core-concepts.pcm	  \
	   release/core-coroutines.pcm	  \
	   release/core-math.pcm 		  \
	   release/core-utils.pcm 		  \
	   release/core-ui.pcm			  \
	   release/core.pcm

OBJ := release/std.pcm.o			  \
	   release/sfml.pcm.o			  \
	   release/core-concepts.pcm.o	  \
	   release/core-coroutines.pcm.o  \
	   release/core-utils.pcm.o		  \
	   release/core-math.pcm.o 		  \
	   release/core-ui.pcm.o 		  \
	   release/core.pcm.o			  \
	   release/core-utils.cpp.o		  \
	   release/core.cpp.o 			  \
	   release/main.cpp.o

RELEASE_PATH = release/

release: $(RELEASE_PATH) release/std.pcm $(TARGET)

release/std.pcm: $(STDCPPM) | $(RELEASE_PATH)
	$(CXX) -std=c++23 -O3 -stdlib=libc++ -Wno-reserved-module-identifier --precompile -o $@ $<

$(TARGET): $(PCM) $(OBJ)
	$(CXX) $(OBJ) -o $@ $(LDFLAGS) $(LIBS)
release/sfml.pcm: modules/sfml/sfml.cppm | release/std.pcm
	$(CXX) $(CXXFLAGS) -o $@ $<
release/core-concepts.pcm: modules/core/core-concepts.cppm | release/std.pcm
	$(CXX) $(CXXFLAGS) -o $@ $<
release/core-coroutines.pcm: modules/core/core-coroutines.cppm | release/std.pcm release/sfml.pcm
	$(CXX) $(CXXFLAGS) -o $@ $<
release/core-utils.pcm: modules/core/core-utils.cppm | release/sfml.pcm release/core-coroutines.pcm
	$(CXX) $(CXXFLAGS) -o $@ $<
release/core-math.pcm: modules/core/core-math.cppm | release/std.pcm
	$(CXX) $(CXXFLAGS) -o $@ $<
release/core-ui.pcm: modules/core/core-ui.cppm | release/std.pcm release/sfml.pcm
	$(CXX) $(CXXFLAGS) -o $@ $<
release/core.pcm: modules/core/core.cppm | release/core-utils.pcm release/core-math.pcm
	$(CXX) $(CXXFLAGS) -o $@ $<

release/std.pcm.o: release/std.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<
release/sfml.pcm.o: release/sfml.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<
release/core-concepts.pcm.o: release/core-concepts.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<
release/core-coroutines.pcm.o: release/core-coroutines.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<
release/core-utils.pcm.o: release/core-utils.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<
release/core-math.pcm.o: release/core-math.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<
release/core-ui.pcm.o: release/core-ui.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<
release/core.pcm.o: release/core.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<


release/core-utils.cpp.o: src/core/core-utils.cpp | release/core.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<
release/core.cpp.o: src/core/core.cpp | release/core-utils.pcm release/core.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<
release/main.cpp.o: src/main.cpp | release/core.pcm
	$(CXX) $(CXXFLAGS_P) -c -o $@ $<

$(RELEASE_PATH):
	@mkdir -p release

run: release
	./$(TARGET)


clean:
	@rm -rf release/
	@printf '\033[38;2;255;83;83mクリア完了\033[0m\n'

.PHONY: clean release run