name: Build (MSYS2 Clang64 SFML3 CXX23 MODULES)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  msys2-clang64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: CLANG64
          update: true
          install: mingw-w64-clang-x86_64-toolchain base-devel git mingw-w64-clang-x86_64-cmake mingw-w64-clang-x86_64-ninja

      - name: BUILD SFML3
        run: |
          git clone --branch 3.0.1 https://github.com/SFML/SFML.git
          cd SFML
          cmake -G Ninja -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/clang64 -DSFML_USE_STATIC_STD_LIBS=ON
          cmake --build build --config Release
          cmake --build build --config Release --target install

      - name: BUILD HENTAI-Cmake-Ninja
        run: |
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      - name: BUILD HENTAI-Makefile
        run: |
          make release -j$(nproc)

      - name: BUILD HENTAI-Makefile-0721
        run: |
          make clean
          make -f Makefile-0721 release -j$(nproc)

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: BUILD linux-HENTAI-Cmake-Ninja
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20
          sudo apt update
          sudo apt install -y git snapd ninja-build libfreetype6-dev libxrandr-dev libxcursor-dev libxi-dev libudev-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev
          sudo snap install cmake --classic
          git clone --branch 3.0.1 https://github.com/SFML/SFML.git
          cd SFML
          cmake -G Ninja -Bbuild -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_FLAGS="-stdlib=libc++" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$HOME/install -DBUILD_SHARED_LIBS=ON
          cmake --build build --config Release
          cmake --build build --config Release --target install
          cd ..
          cmake -B build -G Ninja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_FLAGS="-stdlib=libc++" -DSFML_DIR=$HOME/install/lib/cmake/SFML/ -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

  build-archlinux:
    runs-on: ubuntu-latest
    container: archlinux/archlinux:latest
    steps:
      - uses: actions/checkout@v4
      - name: BUILD archlinux-HENTAI-Cmake-Ninja
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel cmake ninja clang llvm llvm-libs lld sfml 
          cmake -B build -G Ninja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: BUILD macos-HENTAI-Cmake-Ninja
        run: |
          brew update
          brew install llvm cmake ninja sfml
          cmake -B build -G Ninja -DCMAKE_CXX_COMPILER=/opt/homebrew/opt/llvm/bin/clang++ -DCMAKE_CXX_COMPILER_ID_ARG1=-resource-dir=$(brew --prefix llvm)/lib/c++ -DCMAKE_OSX_SYSROOT=$(xcrun --show-sdk-path) -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release